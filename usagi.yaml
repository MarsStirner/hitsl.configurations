configens: !include configens.yaml
common:
  mis_database: &SQLALCHEMY mysql+pymysql://tmis:q1w2e3r4t5@127.0.0.1/hospital1_risar?charset=utf8
  cookie-domain: &COOKIE_DOMAIN 127.0.0.1
  celery_broker: &CELERY_BROKER_URL redis://localhost:6379/0  # redis://:password@hostname:port/db_number
  celery_result_backend: &CELERY_RESULT_BACKEND redis://localhost:6379/1
  # sql database for celery application task (CAT) info and results
  cat_database: &SQLALCHEMY_CAT mysql+pymysql://tmis:q1w2e3r4t5@127.0.0.1/celery_tasks_risar?charset=utf8

  system_user:
    uid: tmis
    gid: www-data

  sphinx: &SPHINX
    DB_TYPE: mysql
    DB_HOST: 127.0.0.1
    DB_PORT: 3306
    DB_NAME: hospital1_risar
    DB_USER: tmis
    DB_PASSWORD: q1w2e3r4t5
    SPHINXQL_PORT: &SPHINXQL_PORT 9306
    SPHINXQL_HOST: &SPHINXQL_HOST 127.0.0.1

  uwsgi_apps: &UWSGI_APPS
    CASTIEL_AUTH_TOKEN: &CASTIEL_AUTH_TOKEN CastielAuthToken  # authToken
    HIPPO_URL: &HIPPO_URL http://127.0.0.1:6600
    CAESAR_URL: &CAESAR_URL http://127.0.0.1:6601
    PRINT_SUBSYSTEM_URL: http://127.0.0.1:6601/print_subsystem/
    COLDSTAR_URL: &COLDSTAR_URL http://127.0.0.1:6605/
    SIMARGL_URL: *COLDSTAR_URL # по умолчанию запускаем Симаргл внутри Колдыря
    SCANSERVER_URL: *COLDSTAR_URL # сканер - тоже
    VESTA_URL: &VESTA_URL http://127.0.0.1:6603/api/
    TSUKINO_USAGI_URL: &TSUKINO_USAGI_URL http://127.0.0.1:6602
    SIMPLELOGS_URL: &SIMPLELOGS_URL http://127.0.0.1:6604
    DEVOURER_URL: &DEVOURER_URL http://127.0.0.1:6606
    IRON_URN_URL: &IRON_URN_URL http://127.0.0.1:6609

    SQLALCHEMY_TRACK_MODIFICATIONS: false
    SQLALCHEMY_ECHO: false

  user_apps: &USER_APPS
    TRFU_URL: ""
    WEBMIS10_URL: ""
    SEARCHD_CONNECTION: &SEARCHD_CONNECTION
      host: *SPHINXQL_HOST
      port: *SPHINXQL_PORT

    DEBUG: True
    PROFILE: False
    TITLE: WebMIS 2.0
    COPYRIGHT_COMPANY: БАРС Груп
    LPU_STYLE: ""
    ORGANISATION_INFIS_CODE: 500
    BABEL_DEFAULT_LOCALE: ru_RU
    TIME_ZONE: Europe/Moscow
    SQLALCHEMY_BINDS:
      celery_tasks: *SQLALCHEMY_CAT

    CELERY_ENABLED: true

    CELERY_BROKER_URL: *CELERY_BROKER_URL
    CELERY_RESULT_BACKEND: *CELERY_RESULT_BACKEND

    CELERY_RESULT_SERIALIZER: json
    CELERY_ENABLE_UTC: true
    CELERY_TIMEZONE: Europe/Moscow
    CELERYD_CONCURRENCY: 2
    CELERY_TASK_RESULT_EXPIRES: 259200  # in seconds, default 1 day

    FILE_STORAGE_PATH: &FILE_STORAGE_PATH ''

  system_prefs: &SYSTEM_PREFS
    # режим работы 1-стандартный, 2+ - различные интеграции. См. enum SystemMode
    mode: 1
    # КЛАДР коды регионов, в которых работает система
    # RISAR_REGIONS: []
    #  - '58000000000'
    #  - '78000000000'
    integration:
      BARS_MIS_URL: http://127.0.0.1

deployment:
  base_dir: .
  prefix: infra

subsystems:

  # Пользовательские подсистемы

  hippo: # Гиппократ (амбулатория)
    configens:
      uwsgi:
        template: "{{ configens.uwsgi.templates.basic | recurse }}"
        ext: |
          processes=4
          lazy-apps=true

          mule
          mule
          pythonpath={{ deployment.base_dir }}/code/hippocrates
          pythonpath={{ deployment.base_dir }}/code/hippocrates/hippocrates

          module=wsgi_risar
          callable=app
      nginx:
        port: 6600
        template: "{{ configens.nginx.templates.uwsgi | recurse }}"
        prepend: |
          uwsgi_cache_path /var/cache/nginx/{{ deployment.prefix }}/ levels=1:2 keys_zone={{ deployment.prefix }}_hippo:100m inactive=120m max_size=200M;
        ext: |
          location /static/ {
            alias {{ deployment.base_dir }}/venv/src/nemesis/nemesis/static/;
          }

          location /api/rb/ {
              uwsgi_cache {{ deployment.prefix }}_hippo;
              uwsgi_cache_bypass $http_pragma;
              uwsgi_cache_valid 200 301 302 304 5m;
              uwsgi_cache_key "$request_method|$http_if_modified_since|$http_if_none_match|$host|$request_uri";
              uwsgi_hide_header "Set-Cookie";
              uwsgi_ignore_headers "Cache-Control" "Expires" "Set-Cookie" "X-Accel-Expires";
              uwsgi_cache_use_stale error timeout invalid_header updating;
              expires 1h;

              add_header Pragma public;

              add_header Debug-Status $upstream_cache_status;
              add_header Debug-Expires $upstream_http_expires;
              add_header Debug-Cache-Control $upstream_http_cache_control;

              include uwsgi_params;
              uwsgi_pass unix://{{ deployment.base_dir }}/uwsgi/{{ this.name }}.uwsgi.sock;
              uwsgi_buffers 8 128k;
          }

    app: !inherit
      ancestors:
        - *UWSGI_APPS
        - *USER_APPS

      SQLALCHEMY_DATABASE_URI: *SQLALCHEMY
      PROJECT_NAME: Hippocrates
      TITLE: "БАРС.МР"
      INDEX_HTML: hippo_index.html
      DEFAULT_ENDPOINT: risar.index_html
      CACHE_TYPE: filesystem
      CACHE_DIR: /tmp/cache/hippo
      BEAKER_SESSION:
        session.type: file
        session.data_dir: /tmp/session/data
        session.lock_dir: /tmp/session/lock
        session.key: hippocrates.session.id
      WSF_CSRF_ENABLED: True
      SECRET_KEY: "Жил бы цитрус в чаще юга? Да! Но фальшивый экземпляр."

      RISAR_REGIONS:  # КЛАДР коды регионов, в которых работает система
        - '58000000000'
      PHARMEXPERT_URL: ''  # 'http://umkb.socmedica.com'
      PHARMEXPERT_SECURITY_KEY: ''

      JASPER_URL: 'http://10.1.2.11:8080/jasperserver-pro'
      JASPER_LOGIN: 'jasperadmin'
      JASPER_PASSWORD: ''

      system_prefs: *SYSTEM_PREFS

    url: *HIPPO_URL

  caesar: # Администрирование и подсистема печати
    configens:
      uwsgi:
        template: "{{ configens.uwsgi.templates.basic | recurse }}"
        ext: |
          processes=4
          lazy-apps=true

          mule
          mule
          pythonpath={{ deployment.base_dir }}/code/caesar
          pythonpath={{ deployment.base_dir }}/code/caesar/caesar

          module=wsgi
          callable=app
      nginx:
        port: 6601
        template: "{{ configens.nginx.templates.uwsgi | recurse }}"
        ext: |
          location /static/ {
            alias {{ deployment.base_dir }}/venv/src/nemesis/nemesis/static/;
          }

          location /print_subsystem/fonts/ {
            add_header Access-Control-Allow-Origin *;
            alias {{ deployment.base_dir }}/code/caesar/caesar/blueprints/print_subsystem/static/;
          }

    app: !inherit
      ancestors:
        - *UWSGI_APPS
        - *USER_APPS

      SQLALCHEMY_DATABASE_URI: *SQLALCHEMY
      PROJECT_NAME: Caesar
      TITLE: Администрирование МИС
      INDEX_HTML: caesar_index.html
      BEAKER_SESSION:
        session.type: file
        session.data_dir: /tmp/session/data
        session.lock_dir: /tmp/session/lock
        session.key: caesar.session.id
      WSF_CSRF_ENABLED: True
      SECRET_KEY: "A quick brown fox jumps over a lazy dog"
    url: *CAESAR_URL

  # Внутренние подсистемы

  tsukino_usagi: # Подсистема конфигурирования подсистем
    configens:
      uwsgi:
        template: "{{ configens.uwsgi.templates.basic | recurse }}"
        ext: |
          processes=1

          env=TSUKINO_USAGI_CONFIG={{ deployment.config_path }}

          module=tsukino_usagi.wsgi
          callable=app
      nginx:
        port: 6602
        template: "{{ configens.nginx.templates.uwsgi | recurse }}"
        ext:
    app: !inherit
      ancestors:
        - *UWSGI_APPS
      DEBUG: True
      CACHE_TYPE: simple
    url: *TSUKINO_USAGI_URL

  vesta: # Подсистема справочников
    configens:
      uwsgi:
        template: "{{ configens.uwsgi.templates.basic | recurse }}"
        ext: |
          processes=2
          lazy-apps=true

          module=nvesta.wsgi
          callable=app
      nginx:
        port: 6603
        template: "{{ configens.nginx.templates.uwsgi | recurse }}"
        ext: |
          location /static/ {
            alias {{ deployment.base_dir }}/venv/lib/python2.7/site-packages/nvesta/static/;
          }

    app: !inherit
      ancestors:
        - *UWSGI_APPS
      MONGO_HOST: 127.0.0.1
      MONGO_PORT: 27017
      MONGO_USERNAME: ''
      MONGO_PASSWORD: ''
      MONGO_DBNAME: nvesta

      SIMPLELOGS_URL: *SIMPLELOGS_URL
      NSI_SOAP: http://nsi.rosminzdrav.ru/wsdl/SOAP-server.v2.php?wsdl
      NSI_TOKEN: ''

      CACHE_TYPE: filesystem
      CACHE_DIR: /tmp/cache/nvesta
    url: *VESTA_URL

  simplelogs: # Подсистема журналирования
    configens:
      uwsgi:
        template: "{{ configens.uwsgi.templates.basic | recurse}}"
        ext: |
          processes=2
          lazy-apps=true

          module=simplelogs.wsgi
          callable=app

      nginx:
        port: 6604
        template: "{{ configens.nginx.templates.uwsgi | recurse }}"
        ext:

    app: !inherit
      ancestors:
        - *UWSGI_APPS

      MONGO_URI: mongodb://localhost/simplelogs
      SIMPLELOGS_COLLECTION: simplelogs
      SIMPLELOGS_LEVELS:
        - critical
        - error
        - warning
        - notice
        - info
        - debug

    url: *SIMPLELOGS_URL

  devourer: # Подсистема работы с файлами
    configens:
      uwsgi:
        template: "{{ configens.uwsgi.templates.basic | recurse }}"
        ext: |
          processes=2

          env=TSUKINO_USAGI_CONFIG={{ deployment.config_path }}

          module=devourer.wsgi
          callable=app
      nginx:
        port: 6606
        template: "{{ configens.nginx.templates.uwsgi | recurse }}"
        ext: |
          location /protected_files {
              internal;
              alias {{ this.app.FILE_STORAGE_PATH }};
          }

          client_max_body_size {{ this.app.FILE_MAX_SIZE }};

    app: !inherit
      ancestors:
        - *UWSGI_APPS
      DEBUG: True
      SQLALCHEMY_DATABASE_URI: *SQLALCHEMY
      PROJECT_NAME: Devourer
      TITLE: Подсистема работы с файлами
      WSF_CSRF_ENABLED: True
      SECRET_KEY: "Жил бы цитрус в чаще юга? Да! Но фальшивый экземпляррр."
      FILE_STORAGE_PATH: *FILE_STORAGE_PATH
      FILE_MAX_SIZE: 10M
      CORS_ORIGINS:
        - *HIPPO_URL
        - *CAESAR_URL

    url: *DEVOURER_URL

  coldstar: # Подсистема всякой ерунды
    configens:
      supervisor:
        template: |
          [program:{{ deployment.prefix }}_{{ this.name }}]

          command={{ deployment.base_dir }}/venv/bin/twistd -n bouser --config {{ common.uwsgi_apps.TSUKINO_USAGI_URL }}/{{ this.name }}
          directory={{ deployment.base_dir }}
          stdout_logfile={{ deployment.base_dir }}/logs/{{ this.name }}.log
          stderr_logfile={{ deployment.base_dir }}/logs/{{ this.name }}.log
          autostart=true
          autorestart=true
          startsecs=3
          stopwaitsecs=6
          environment=VIRTUAL_ENV={{ deployment.base_dir }}/venv

          user={{ common.system_user.uid }}
          group={{ common.system_user.gid }}
      nginx:
        port: 6605
        template: |
          server {
            listen {{ this.configens.nginx.port }};

            rewrite_log on;
            autoindex on;
            access_log {{ deployment.base_dir }}/logs/{{ this.name }}-access.log;
            error_log  {{ deployment.base_dir }}/logs/{{ this.name }}-error.log;

            tcp_nodelay on;
            sendfile on;
            tcp_nopush on;

            gzip on;
            gzip_http_version 1.1;
            gzip_min_length  1100;
            gzip_disable "MSIE [1-6]\.(?!.*SV1)";
            gzip_vary on;
            gzip_proxied any;
            gzip_comp_level 6;
            gzip_buffers 16 8k;
            gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

            location / {
              proxy_pass http://localhost:6097/;
              include proxy_params;
              proxy_set_header Connection '';
              proxy_http_version 1.1;
              chunked_transfer_encoding off;
              proxy_buffering off;
              proxy_cache off;
              proxy_connect_timeout 600s;
              proxy_read_timeout 600s;
            }
          }

    app:
      module:
        bouser.ext.db: # База данных
          url: *SQLALCHEMY
        bouser.web: # Веб-интерфейс
          allowed-domains:
            - *HIPPO_URL
            - *CAESAR_URL
            - *COLDSTAR_URL
            - *DEVOURER_URL
          cors-domain: *HIPPO_URL
          strport: tcp:6097:127.0.0.1
        bouser.castiel: # Аутентификация
          cookie_name: *CASTIEL_AUTH_TOKEN
          cookie_domain: *COOKIE_DOMAIN
          clean_period: 10
          expiry_time: 3600
          domain_map: {}
        bouser.ext.hitsl.castiel.auth.mis: # Адаптер аутентификации для ТМИС

        bouser.ext.ezekiel: # Блокировки
          short_timeout: 25
        bouser.ext.ezekiel.eventsource:
          keep-alive: 60
        bouser.ext.ezekiel.rest:
        bouser.ext.ezekiel.web:
#        bouser.ext.ezekiel.ws:

        bouser.ext.hitsl.scanner: # Сканирование
        bouser.ext.hitsl.scanner.resource:

        bouser.ext.hitsl.schedule_manager: # Задачи
          mixins:
            - bouser.ext.hitsl.errands.sm_task.errand_statuses

        bouser.ext.simargl: # Уведомления
          # config: /srv/infrastructure/simargl.conf
          config:
#            print:
#              module: bouser.ext.simargl.clients.console
            es:
              module: bouser.ext.simargl.clients.eventsource
            rpc:
              module: bouser.ext.simargl.clients.rpc
            db:
              module: bouser.ext.simargl.clients.db
            heartbeat:
              module: bouser.ext.simargl.clients.heartbeat
            mailer:
              module: bouser.ext.hitsl.simargl.clients.mailer
            errands:
              module: bouser.ext.hitsl.errands.simargl_client
            subscriptions:
              module: bouser.ext.hitsl.simargl.clients.user_subscriptions
#            sclient:
#              module: bouser.ext.simarg.simargl_client
#               host: localhost
#               port: 9667
#            sserver:
#              module: bouser.ext.simargl.simargl_server
#              host: localhost
#              port: 9667

        # bouser.ext.ws: # WebSockets

  sphinx:
    configens:
      supervisor:
        template: |
          [program:{{ deployment.prefix }}_{{ this.name }}]

          directory={{ deployment.base_dir }}
          command=searchd --nodetach -c {{ deployment.base_dir }}/configs/sphinx/{{ deployment.prefix }}_sphinx.conf
          stdout_logfile={{ deployment.base_dir }}/logs/{{ this.name }}.log
          stderr_logfile={{ deployment.base_dir }}/logs/{{ this.name }}.log
          autostart=true
          autorestart=true
          startsecs=3
          stopwaitsecs=6

          user={{ common.system_user.uid }}
          group={{ common.system_user.gid }}
      sphinx:
        template: !readfile ./sphinx.j2

  crontab:
    configens:
      crontab:
        template: !readfile ./crontab.cron

  celery_worker:
    configens:
      supervisor:
        template: |
          ; ==================================
          ;  celery worker supervisor example
          ; ==================================

          [program:{{ deployment.prefix }}_{{ this.name }}]
          environment=PYTHONPATH={{ deployment.base_dir }}/code/hippocrates:{{ deployment.base_dir }}/code/hippocrates/hippocrates;TSUKINO_USAGI_URL={{ common.uwsgi_apps.TSUKINO_USAGI_URL }}
          command={{ deployment.base_dir }}/venv/bin/celery -A hippocrates.celery_worker worker --loglevel=INFO
          directory={{ deployment.base_dir }}

          numprocs=1
          stdout_logfile={{ deployment.base_dir }}/logs/{{ this.name }}.log
          stderr_logfile={{ deployment.base_dir }}/logs/{{ this.name }}.log
          autostart=true
          autorestart=true
          startsecs=10

          ; Need to wait for currently executing tasks to finish at shutdown.
          ; Increase this if you have very long running tasks.
          stopwaitsecs=300

          ; When resorting to send SIGKILL to the program to terminate it
          ; send SIGKILL to its whole process group instead,
          ; taking care of its children as well.
          killasgroup=true

          ; Set Celery priority higher than default (999)
          ; so, if rabbitmq (or other broker) is supervised, it will start first.
          priority=1000

          user={{ common.system_user.uid }}
          group={{ common.system_user.gid }}

  celerybeat:
    configens:
      supervisor:
        template: |
          ; ================================
          ;  celery beat supervisor example
          ; ================================

          [program:{{ deployment.prefix }}_{{ this.name }}]
          environment=PYTHONPATH={{ deployment.base_dir }}/code/hippocrates:{{ deployment.base_dir }}/code/hippocrates/hippocrates;TSUKINO_USAGI_URL={{ common.uwsgi_apps.TSUKINO_USAGI_URL }}
          command={{ deployment.base_dir }}/venv/bin/celery -A hippocrates.celery_worker beat --loglevel=INFO
          directory={{ deployment.base_dir }}

          numprocs=1
          stdout_logfile={{ deployment.base_dir }}/logs/{{ this.name }}.log
          stderr_logfile={{ deployment.base_dir }}/logs/{{ this.name }}.log
          autostart=true
          autorestart=true
          startsecs=10

          ; if rabbitmq (or other broker) is supervised, set its priority higher
          ; so it starts first
          priority=1001

          user={{ common.system_user.uid }}
          group={{ common.system_user.gid }}
